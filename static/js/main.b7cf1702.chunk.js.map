{"version":3,"sources":["Constants/Constants.js","Urls.js","Components/NavBar/NavBar.js","Components/axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","App.js","index.js"],"names":["API_Key","imageUrl","originals","actions","horrors","NavBar","className","src","alt","instance","axios","create","baseURL","Banner","useState","movie","setmovie","useEffect","get","then","response","console","log","data","results","style","backgroundImage","backdrop_path","name","overview","RowPost","props","setMovie","youtubeId","setyoutubeId","url","catch","err","title","map","obj","onClick","id","lenght","isSmall","videoId","key","opts","height","width","playerVars","autoplay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OACaA,EAAQ,mCACRC,EAAS,sCCDTC,EAAU,wBAAD,OAAyBF,EAAzB,sBACTG,EAAQ,2BAAD,OAA4BH,EAA5B,sBACPI,EAAQ,2BAAD,OAA4BJ,EAA5B,mB,eCSLK,MATf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,OAAOC,IAAI,mHAAmHC,IAAI,KACjJ,qBAAKF,UAAU,SAASC,IAAI,+EAA+EC,IAAI,S,+BCD5GC,E,OAJEC,EAAMC,OAAO,CAC1BC,QHHiB,iCIgCNC,MA3Bf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAQE,OAPFC,qBAAU,WACNP,EAAMQ,IAAN,oCAAuClB,EAAvC,oBAAiEmB,MAAK,SAACC,GACnEC,QAAQC,IAAIF,EAASG,KAAKC,QAAQ,IAClCR,EAASI,EAASG,KAAKC,QAAQ,SAGtC,IAEK,sBACClB,UAAU,SACVmB,MAAO,CAACC,gBAAgB,OAAD,OAAQX,EAAQd,EAASc,EAAMY,cAAkB,GAAjD,MAFxB,UAGI,sBAAKrB,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBS,EAAQA,EAAMa,KAAK,KAC1C,sBAAKtB,UAAU,iBAAf,UACI,wBAAQA,UAAU,SAAlB,kBACA,wBAAQA,UAAU,SAAlB,wBAEJ,oBAAIA,UAAU,cAAd,SAA6BS,EAAQA,EAAMc,SAAS,QAExD,qBAAKvB,UAAU,oB,gBCsBZwB,MA3Cf,SAAiBC,GACb,MAA0BjB,mBAAS,IAAnC,mBAAOC,EAAP,KAAciB,EAAd,KACA,EAAkClB,mBAAS,IAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KA4BA,OA3BAjB,qBAAU,WACPP,EAAMQ,IAAIa,EAAMI,KAAKhB,MAAK,SAACC,GACvBC,QAAQC,IAAIF,EAASG,MACrBS,EAASZ,EAASG,KAAKC,YACxBY,OAAO,SAAAC,SAIV,IAoBC,sBAAK/B,UAAU,MAAf,UACI,6BAAKyB,EAAMO,QACX,qBAAKhC,UAAU,UAAf,SACES,EAAMwB,KAAI,SAACC,GAAD,OACV,qBAAKC,QAAS,kBAfHC,EAemBF,EAAIE,GAdxCrB,QAAQC,IAAIoB,QACZhC,EAAMQ,IAAN,kBAAqBwB,EAArB,2BAA0C1C,EAA1C,oBAAoEmB,MAAK,SAAAC,GAChC,GAA9BA,EAASG,KAAKC,QAAQmB,OACtBT,EAAad,EAASG,KAAKC,QAAQ,IAEnCH,QAAQC,IAAI,iBANP,IAACoB,GAe4BpC,UAAWyB,EAAMa,QAAU,cAAe,SAAUrC,IAAG,UAAKN,EAASuC,EAAIb,eAAiBnB,IAAI,iBAGpIyB,GAAgB,cAAC,IAAD,CAAUY,QAASZ,EAAUa,IAAKC,KA1BhD,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,UCJLC,MAZf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAS6B,IAAKjC,EAAWoC,MAAM,sBAC/B,cAAC,EAAD,CAASH,IAAKhC,EAASmC,MAAM,gBAAgBM,SAAO,IACpD,cAAC,EAAD,CAAST,IAAK/B,EAASkC,MAAM,gBAAgBM,SAAO,QCPzDS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b7cf1702.chunk.js","sourcesContent":["export const baseUrl='https://api.themoviedb.org/3';\r\nexport const API_Key='bda52d24e3946ace74b611512d55d5f5';\r\nexport const imageUrl='https://image.tmdb.org/t/p/original';","import {API_Key} from './Constants/Constants'\r\nexport const originals=`/discover/tv?api_key=${API_Key}&with_networks=213`\r\nexport const actions=`/discover/movie?api_key=${API_Key}&with_genres=10749`\r\nexport const horrors=`/discover/movie?api_key=${API_Key}&with_genres=27`\r\n","import React from 'react'\r\nimport './NavBar.css'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className='navbar'>\r\n            <img className='logo' src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"\" />\r\n            <img className='avatar' src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import axios from 'axios'\r\nimport {baseUrl} from '../Constants/Constants'\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,  \r\n  });\r\n\r\nexport default instance","import React,{useEffect, useState} from 'react'\r\nimport './Banner.css'\r\nimport axios  from '../axios'\r\nimport {API_Key,imageUrl} from '../../Constants/Constants'\r\n\r\nfunction Banner() {\r\n  const [movie, setmovie] = useState()\r\n  useEffect(() => {\r\n      axios.get(`trending/all/week?api_key=${API_Key}&language=en-US`).then((response)=>{\r\n          console.log(response.data.results[0]);\r\n          setmovie(response.data.results[0])\r\n      })\r\n     \r\n}, [] )\r\n    return (\r\n        <div\r\n         className='Banner'\r\n         style={{backgroundImage:`url(${movie ? imageUrl+movie.backdrop_path  :  \"\"})`}}>\r\n            <div className='content'>\r\n                <h1 className='title'>{movie ? movie.name:\"\"}</h1>\r\n                <div className='banner_buttons'>\r\n                    <button className='button'>Play</button>\r\n                    <button className='button'>My list</button>\r\n                </div>\r\n                <h1 className='description'>{movie ? movie.overview:\"\"}</h1>\r\n            </div>\r\n            <div className=\"fade_bottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Banner\r\n","import React,{useEffect, useState} from 'react'\r\nimport './RowPost.css'\r\nimport axios  from '../axios'\r\nimport {imageUrl,API_Key} from '../../Constants/Constants'\r\nimport YouTube from 'react-youtube'\r\nfunction RowPost(props) {\r\n    const [movie, setMovie] = useState([])\r\n    const [youtubeId, setyoutubeId] = useState('')\r\n    useEffect(() => {\r\n       axios.get(props.url).then((response)=>{\r\n           console.log(response.data);\r\n           setMovie(response.data.results)\r\n       }).catch (err=>{\r\n        //    alert('Network Error')\r\n       })\r\n       \r\n    }, [])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        }\r\n    };\r\n    const handleMovie = (id)=>{\r\n        console.log(id);\r\n        axios.get(`/movie/ ${id}/videos?api_key=${API_Key}&language=en-US`).then(response=>{\r\n               if (response.data.results.lenght!=0) {\r\n                   setyoutubeId(response.data.results[0])\r\n               }else{\r\n                   console.log('No Trailer');\r\n               }\r\n        })\r\n    } \r\n    return ( \r\n        <div className='row'>\r\n            <h2>{props.title}</h2>\r\n            <div className=\"posters\">\r\n             {movie.map((obj)=>\r\n              <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' :'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"posters\" />\r\n             )}                       \r\n            </div>\r\n            {  youtubeId  &&   <YouTube  videoId={youtubeId.key} opts={opts} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n ","import React from 'react';\nimport {actions,horrors,originals} from './Urls'\nimport NavBar from './Components/NavBar/NavBar';\nimport './App.css'\nimport Banner from './Components/Banner/Banner';\nimport RowPost from './Components/RowPost/RowPost';\nfunction App() {\n  return (\n    <div className=\"App\">\n     <NavBar/>\n     <Banner/>\n     <RowPost url={originals} title=\"Netflix Originals\"/>\n     <RowPost url={actions} title=\"Action Movies\" isSmall/>\n     <RowPost url={horrors} title=\"Horror Movies\" isSmall/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}